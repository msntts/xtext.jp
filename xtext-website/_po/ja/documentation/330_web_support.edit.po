# Japanese translations for PACKAGE package.
# Copyright (C) 2021 THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# msntts <terzonome-github@yahoo.co.jp>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-05 02:33-0500\n"
"PO-Revision-Date: 2021-06-05 02:33-0500\n"
"Last-Translator: msntts <terzonome-github@yahoo.co.jp>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../documentation/330_web_support.md:1
msgid ""
"---\n"
"layout: documentation\n"
"title: Web Editor Support\n"
"part: Reference Documentation\n"
"---"
msgstr ""
"---\n"
"layout: documentation\n"
"title: Webエディターサポート\n"
"part: リファレンスドキュメント\n"
"---"

#: ../../../documentation/330_web_support.md:7
msgid "# {{page.title}} {#web-integration}"
msgstr "# {{page.title}} {#web-integration}"

#: ../../../documentation/330_web_support.md:9
msgid "Since version 2.9 Xtext offers an interface for integration of text editors in web applications. The text editors are implemented in JavaScript, and the language-related services such as code completion are realized through HTTP requests to a server-side component."
msgstr "バージョン2.9からXtextはWebアプリケーション内のテキストエディター統合のためのインターフェースを提供しています。テキストエディターはJavaScriptにより実装されており、コード補完のような言語関連サービスはサーバーサイドコンポーネントへのHTTPリクエストにより実現されています。"

#: ../../../documentation/330_web_support.md:11
msgid "## The Client {#client}"
msgstr "## クライアント {#client}"

#: ../../../documentation/330_web_support.md:13
msgid "Xtext supports three JavaScript text editor libraries:"
msgstr "Xtextは3つのJavaScriptテキストエディターライブラリーをサポートしています。"

#: ../../../documentation/330_web_support.md:15
msgid ""
" * [Orion](http://eclipse.org/orion/)\n"
" * [Ace](http://ace.c9.io)\n"
" * [CodeMirror](http://codemirror.net)"
msgstr ""
" * [Orion](http://eclipse.org/orion/)\n"
" * [Ace](http://ace.c9.io)\n"
" * [CodeMirror](http://codemirror.net)"

#: ../../../documentation/330_web_support.md:19
msgid "The set of supported language-related services depends on which editor library is chosen, as shown in the following table."
msgstr "下表に示すエディターライブラリーのどれを選ぶかによってサポートされる言語関連サービスが異なります。"

#: ../../../documentation/330_web_support.md:21
msgid ""
"<table class=\"table table-bordered\">\n"
"  <thead>\n"
"    <tr>\n"
"      <th></th>\n"
"      <th>Orion</th>\n"
"      <th>Ace</th>\n"
"      <th>CodeMirror</th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <td><a href=\"#content-assist\">Content assist</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#validation\">Validation</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#syntax-highlighting\">Syntax highlighting</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#semantic-highlighting\">Semantic highlighting</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#mark-occurrences\">Mark occurrences</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#hover-info\">Hover information</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#formatting\">Formatting</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#code-generation\">Code generator</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#persistence\">Persistence</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>"
msgstr ""
"<table class=\"table table-bordered\">\n"
"  <thead>\n"
"    <tr>\n"
"      <th></th>\n"
"      <th>Orion</th>\n"
"      <th>Ace</th>\n"
"      <th>CodeMirror</th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <td><a href=\"#content-assist\">コンテンツアシスト</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#validation\">検証</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#syntax-highlighting\">シンタックスハイライト</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#semantic-highlighting\">セマンティックハイライト</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#mark-occurrences\">強調表示</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#hover-info\">ホバー</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"      <td><div class=\"not-supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#formatting\">フォーマット</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"303_runtime_concepts.html#code-generation\">コード生成</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"    <tr>\n"
"      <td><a href=\"#persistence\">永続化</a></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"      <td><div class=\"supported\"></div></td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>"

#: ../../../documentation/330_web_support.md:88
msgid "The JavaScript integration of Xtext uses [RequireJS](http://requirejs.org) for managing modules and their dependencies. The main module is `xtext/xtext-orion`, `xtext/xtext-ace`, or `xtext/xtext-codemirror`, depending on which editor library is used. Examples for loading these libraries together with Xtext can be generated by the `WebIntegrationFragment` by setting the option `generateHtmlExample = true` (see [The Language Generator](302_configuration.html#generator)). A minimal setup based on [WebJars](https://www.webjars.org/) is shown in the following listings."
msgstr "XtextのJavascript統合ではモジュールとその依存関係の管理のため[RequireJS](http://requirejs.org)を使います。主なモジュールは使用するエディターにより異なり `xtext/xtext-orion`、 `xtext/xtext-ace`もしくは `xtext/xtext-codemirror`のどれかです。Xtextと一緒にこれらのライブラリーをロードする例は、`generateHtmlExample = true`とした`WebIntegrationFragment`によって生成できます。([言語ジェネレーター](302_configuration.html#generator)参照)[WebJars](https://www.webjars.org/)に基づく最小の設定を以下に示します。"

#: ../../../documentation/330_web_support.md:90
msgid "#### Orion"
msgstr "#### Orion"

#: ../../../documentation/330_web_support.md:92
msgid ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"text\": \"webjars/requirejs-text/<version>/text\",\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"xtext/xtext-orion\": \"xtext/<version>/xtext-orion\"\n"
"    }\n"
"});\n"
"require([\"orion/code_edit/built-codeEdit-amd\"], function() {\n"
"    require([\"xtext/xtext-orion\"], function(xtext) {\n"
"        xtext.createEditor();\n"
"    });\n"
"});\n"
"```\n"
"Since Orion is not available on WebJars, it has to be downloaded manually at [download.eclipse.org](http://download.eclipse.org/orion/)."
msgstr ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"text\": \"webjars/requirejs-text/<version>/text\",\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"xtext/xtext-orion\": \"xtext/<version>/xtext-orion\"\n"
"    }\n"
"});\n"
"require([\"orion/code_edit/built-codeEdit-amd\"], function() {\n"
"    require([\"xtext/xtext-orion\"], function(xtext) {\n"
"        xtext.createEditor();\n"
"    });\n"
"});\n"
"```\n"
"WebJarsではOrionが入手できないため、[download.eclipse.org](http://download.eclipse.org/orion/)からダウンロードする必要があります。"

#: ../../../documentation/330_web_support.md:108
msgid "#### Ace"
msgstr "#### Ace"

#: ../../../documentation/330_web_support.md:110
msgid ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"ace/ext/language_tools\": \"webjars/ace/<version>/src/ext-language_tools\",\n"
"        \"xtext/xtext-ace\": \"xtext/<version>/xtext-ace\"\n"
"    }\n"
"});\n"
"require([\"webjars/ace/<version>/src/ace\"], function() {\n"
"    require([\"xtext/xtext-ace\"], function(xtext) {\n"
"        xtext.createEditor();\n"
"    });\n"
"});\n"
"```"
msgstr ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"ace/ext/language_tools\": \"webjars/ace/<version>/src/ext-language_tools\",\n"
"        \"xtext/xtext-ace\": \"xtext/<version>/xtext-ace\"\n"
"    }\n"
"});\n"
"require([\"webjars/ace/<version>/src/ace\"], function() {\n"
"    require([\"xtext/xtext-ace\"], function(xtext) {\n"
"        xtext.createEditor();\n"
"    });\n"
"});\n"
"```"

#: ../../../documentation/330_web_support.md:125
msgid "#### CodeMirror"
msgstr "#### CodeMirror"

#: ../../../documentation/330_web_support.md:127
msgid ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"xtext/xtext-codemirror\": \"xtext/<version>/xtext-codemirror\"\n"
"    },\n"
"    packages: [{\n"
"        name: \"codemirror\",\n"
"        location: \"webjars/codemirror/<version>\",\n"
"        main: \"lib/codemirror\"\n"
"    }]\n"
"});\n"
"require([\"xtext/xtext-codemirror\"], function(xtext) {\n"
"    xtext.createEditor();\n"
"});\n"
"```"
msgstr ""
"```javascript\n"
"require.config({\n"
"    paths: {\n"
"        \"jquery\": \"webjars/jquery/<version>/jquery.min\",\n"
"        \"xtext/xtext-codemirror\": \"xtext/<version>/xtext-codemirror\"\n"
"    },\n"
"    packages: [{\n"
"        name: \"codemirror\",\n"
"        location: \"webjars/codemirror/<version>\",\n"
"        main: \"lib/codemirror\"\n"
"    }]\n"
"});\n"
"require([\"xtext/xtext-codemirror\"], function(xtext) {\n"
"    xtext.createEditor();\n"
"});\n"
"```"

#: ../../../documentation/330_web_support.md:144
msgid "### JavaScript API"
msgstr "### JavaScript API"

#: ../../../documentation/330_web_support.md:146
msgid "#### `xtext.createEditor(options)`"
msgstr "#### `xtext.createEditor(options)`"

#: ../../../documentation/330_web_support.md:148
msgid "Creates one or more editor instances and initializes Xtext services for them. The available options are described below. The return value is the created editor if exactly one was created, or an array of editors otherwise:"
msgstr "エディターインスタンスを1つかそれ以上作成し、それぞれに対してXtextサービスを初期化します。利用可能なオプションは以下で説明します。作成したエディターが1つの場合、戻り値は作成したエディターです。複数作成した場合、戻り値はエディターの配列です:"

#: ../../../documentation/330_web_support.md:150
msgid ""
"```javascript\n"
"var editor = xtext.createEditor();\n"
"```"
msgstr ""
"```javascript\n"
"var editor = xtext.createEditor();\n"
"```"

#: ../../../documentation/330_web_support.md:154
msgid "For Orion the editor is not returned directly, but through a _promise_:"
msgstr "Orionではエディターが直接戻り値になることはなく、_promise_を介して返されます:"

#: ../../../documentation/330_web_support.md:156
msgid ""
"```javascript\n"
"xtext.createEditor().done(function(editorViewer) {\n"
"    ...\n"
"});\n"
"```"
msgstr ""
"```javascript\n"
"xtext.createEditor().done(function(editorViewer) {\n"
"    ...\n"
"});\n"
"```"

#: ../../../documentation/330_web_support.md:162
msgid "If the parent element for the editor is not specified through the options, this function looks for an element with `id=\"xtext-editor\"`. If none exists, the function looks for elements with `class=\"xtext-editor\"`."
msgstr "エディターの親要素がオプションで指定されていない場合、この関数は`id=\"xtext-editor\"`の要素を検索します。もし、`id=\"xtext-editor\"`の要素がない場合、この関数は`class=\"xtext-editor\"`の要素を検索します。"

#: ../../../documentation/330_web_support.md:164
msgid "#### `xtext.createServices(editor, options)`"
msgstr "#### `xtext.createServices(editor, options)`"

#: ../../../documentation/330_web_support.md:166
msgid "Initializes Xtext services for an already created editor. Use this variant if you want full control over the editor creation."
msgstr "生成済みのエディターに対してXtextサービスを初期化します。エディターの生成を完全にコントロールしたい場合は、この変数を使ってください。"

#: ../../../documentation/330_web_support.md:168
msgid "#### `xtext.removeServices(editor)`"
msgstr "#### `xtext.removeServices(editor)`"

#: ../../../documentation/330_web_support.md:170
msgid "Removes all services and associated listeners from the given editor. The JavaScript-based syntax highlighting is not affected by this operation."
msgstr "エディターから全てのサービスと関連するリスナーを削除します。この操作はJavascriptによるシンタックスハイライトには効果がありません。"

#: ../../../documentation/330_web_support.md:172
msgid "### Options"
msgstr "### Options"

#: ../../../documentation/330_web_support.md:174
msgid "Options can be specified with an object passed to the `createEditor` or `createServices` functions:"
msgstr "オプションは `createEditor`もしくは`createServices`関数に渡されるオブジェクトを通じて指定することができます。"

#: ../../../documentation/330_web_support.md:176
msgid ""
"```javascript\n"
"xtext.createEditor({\n"
"    resourceId: \"example.statemachine\",\n"
"    syntaxDefinition: \"xtext/ace-mode-statemachine\"\n"
"});\n"
"```"
msgstr ""
"```javascript\n"
"xtext.createEditor({\n"
"    resourceId: \"example.statemachine\",\n"
"    syntaxDefinition: \"xtext/ace-mode-statemachine\"\n"
"});\n"
"```"

#: ../../../documentation/330_web_support.md:183
msgid "Alternatively, if `createEditor` is used, options can be set as attributes of the HTML element into which the editor is created. The attribute name is derived from the JavaScript option name by converting CamelCase to hyphen-separated and prefixing with `data-editor-`, e.g. `resourceId` becomes `data-editor-resource-id`:"
msgstr "または `createEditor`を用いる場合、エディターが生成されたHTML要素内のアトリビュートにてオプションを設定することができます。アトリビュート名はJavaScriptオプション名をキャメルケースからハイフンセパレートに変換し接頭語`data-editor-`をつけてものが生成されます。例えば、`resourceId`は`data-edirot-resource-id`になります:"

#: ../../../documentation/330_web_support.md:185
msgid ""
"```html\n"
"<div id=\"xtext-editor\"\n"
"    data-editor-resource-id=\"example.statemachine\"\n"
"    data-editor-syntax-definition=\"xtext/ace-mode-statemachine\"></div>\n"
"```"
msgstr ""
"```html\n"
"<div id=\"xtext-editor\"\n"
"    data-editor-resource-id=\"example.statemachine\"\n"
"    data-editor-syntax-definition=\"xtext/ace-mode-statemachine\"></div>\n"
"```"

#: ../../../documentation/330_web_support.md:191
msgid "See below for a [full list of available options](#options-reference)."
msgstr "[利用可能なすべてのオプション](#options-reference)は、以下を参照してください。"

#: ../../../documentation/330_web_support.md:193
msgid "### Getting the Text Content {#getting-text-content}"
msgstr  "### テキストコンテンツの取得 {#getting-text-content}"

#: ../../../documentation/330_web_support.md:195
msgid "The text content is either loaded from the Xtext server or provided through JavaScript. In either case, the Xtext server needs to identify the language you are using in order to process any requests. A language is usually identified using a file extension or a content type. The file extension can be specified with the `xtextLang` option, while the content type is given with the `contentType` option."
msgstr "テキストコンテンツはXtextサーバーからロードされる、もしくはJavascriptにより提供されます。いずれにせよ、Xtextサーバーはリクエストを処理するために使用している言語を識別する必要があります。言語は通常ファイルの拡張子かコンテンツタイプにて識別されます。ファイル拡張子は`xtextLang`オプションにより指定可能です。一方、コンテンツタイプは`contentType`オプションで与えられます。"

#: ../../../documentation/330_web_support.md:197
msgid "#### Loading text from the server"
msgstr "### サーバーからテキストをロードする"

#: ../../../documentation/330_web_support.md:199
msgid "If you specify a value for the `resourceId` option, the language may be identified from the file extension included in that id. In this case it is not necessary to provide the `xtextLang` option. Another effect of using `resourceId` is that the server will try to load the respective resource from its persistence layer. The Xtext server does not define any default persistence, so you have to customize it as described in the [Persistence](#persistence) section in order to use this approach."
msgstr "`resourceId`オプションに値を指定した場合、言語はidに含まれるファイル拡張子から識別される。この場合、`xtextLang`オプションを提供する必要はありません。`resourceId`の使用によるもう1つの効果は、サーバーが永続化層からそれぞれのリソースのロードを試みることです。Xtextサーバーはデフォルトの永続化を定義していないので、この方法を用いるためには[Persistence](#persistence)節に記載に従ってカスタマイズをする必要があります。"

#: ../../../documentation/330_web_support.md:201
msgid "The `resourceId` string may contain whatever information you need to identify a specific text content on the server. Usually the [URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) syntax is used, but this is not mandatory."
msgstr "`resourceId`文字列はサーバー上でテキストコンテンツの識別に必要な情報を含んでいます。通常、 [URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier)構文が用いられますが、これは必須ではありません。"

#: ../../../documentation/330_web_support.md:203
msgid "#### Providing text through JavaScript"
msgstr "### JavaScriptを通じたテキストの提供"

#: ../../../documentation/330_web_support.md:205
msgid "The persistence layer of the Xtext server is totally optional, so you can use whatever means you like to fetch the content, e.g. generate it in the client or request it through your own service. If the DOM element into which the editor is created already contains some text, this text is used as the initial content. Otherwise the editor is initially empty, and you can use the API of the chosen editor framework to change the content whenever you like."
msgstr "Xtextサーバーの永続化層は完全にオプションなので、コンテンツのフェッチに好きな方法を使うことができます。例えば、クライアントサイドで生成したり、自身のサービスを経由して要求します。エディターが生成されるDOM要素内にテキストすでに含まれている場合、このテキストは初期コンテンツとして使用されます。それ以外の場合、エディターの初期値は空白であり、選択したエディターフレームワークのAPIを使ってコンテンツを好きに変更することができます。"

#: ../../../documentation/330_web_support.md:207
msgid "If you would like to specify a `resourceId` without using the persistence services shipped with Xtext, you can do so by setting the option `loadFromServer` to `false`."
msgstr "もしXtext付属の永続化サービスを使用せずに`resourceId`を指定したい場合、`loadFromServer`オプションを`false`に設定してください。"

#: ../../../documentation/330_web_support.md:209
msgid "### Operation Modes"
msgstr "### オペレーションモード"

#: ../../../documentation/330_web_support.md:211
msgid "The web integration of Xtext supports two operation modes, which are described in the following."
msgstr "XtextのWeb統合では以下に示す2つのオペレーションモードがあります。"

#: ../../../documentation/330_web_support.md:213
msgid "#### Stateful mode"
msgstr "### ステートフルモード"

#: ../../../documentation/330_web_support.md:215
msgid "This mode is active when `sendFullText` is `false`, which is the default setting. In stateful mode, an update request is sent to the server whenever the text content of the editor changes. With this approach a copy of the text is kept in the session state of the server, and many Xtext-related services such as AST parsing and validation are cached together with that copy. This means that services run much faster on the server, and the message size of most requests is very small. Use this mode in order to optimize response times of service requests."
msgstr "このモードは `sendFullText`を`false`(デフォルト設定)に設定したときに有効となります。ステートフルモードでは、エディターのテキストコンテンツが変更されるたびに更新要求がサーバーに送信されます。このアプローチでは、テキストのコピーがサーバーのセッション状態に保持され、ASTパースや検証といったXtext関連のサービスがテキストのコピーとともにキャッシュされます。これは、サーバー上でサービスが非常に高速で実行され、そして多くの要求メッセージのサイズが非常に小さいことを意味します。サービス要求の応答時間を最適化するにはこのモードを使用します。"

#: ../../../documentation/330_web_support.md:217
msgid "#### Stateless mode"
msgstr "#### ステートレスモード"

#: ../../../documentation/330_web_support.md:219
msgid "This mode is active when `sendFullText` is set to `true`. In this case no update request is necessary when the text content changes, but the full text content is attached to all other service requests. This means that the text has to be parsed again for each request, and the message size is proportional to the size of the text content. Use this mode only when you want to avoid server-side sessions and respective session ids stored in cookies."
msgstr "このモードは`sendFullText`を`true`に設定したとき有効になります。この場合、テキストコンテンツを変更しても更新リクエストを送る必要はありませんが、他の全てのサービス要求にフルテキストコンテンツが添付されます。これは、要求のたびにテキストをパースする必要があり、メッセージサイズもテキストコンテンツのサイズに比例して大きくなることを意味します。このモードはサーバーサイドセッションと各セッションidをcookieに保存するのを避けたい場合にのみ使用します。"

#: ../../../documentation/330_web_support.md:221
msgid "### Syntax Highlighting {#syntax-highlighting}"
msgstr "### シンタックスハイライト {#syntax-highlighting}"

#: ../../../documentation/330_web_support.md:223
msgid "In contrast to [semantic highlighting](#semantic-highlighting), syntax highlighting can be computed purely in JavaScript without requiring a connection to the server. This is realized with the highlighting capabilities of the employed editor libraries. All three libraries offer a JavaScript API for specifying highlighting rules. The `WebIntegrationFragment` of the Xtext language generator is able to generate a highlighting specification that includes keywords and some basic tokens such as numbers and comments (see [The Language Generator](302_configuration.html#generator)). If the highlighting generated in this way is not sufficient, you can still implement the specification yourself following the documentation of the chosen editor library."
msgstr "[セマンティックハイライト](#semantic-highlighting)と対照的に、シンタックスハイライトはサーバーへの接続要求なく純粋にJavascript内で計算できます。これは使っているエディターライブラリーのハイライト機能を用いて実現されます。3つの全てのライブラリーはハイライトルールを指定するためのJavaScript APIを提供しています。Xtext言語ジェネレーターの`WebIntegrationFragment`は、数値やコメントといった基礎的なトークンやキーワードを含むハイライト仕様を生成することができます。 ([言語ジェネレーター](302_configuration.html#generator)参照)もし、Xtext言語ジェネレーターが生成したものが不十分であるならば、選択したエディターライブラリーのドキュメントに従い、自身で仕様を実装することができます。"

#: ../../../documentation/330_web_support.md:225
msgid "The path to the highlighting specification is set with the `syntaxDefinition` option while setting up the Xtext editor. If no value is specified for that option, it is built from the `xtextLang` option in the form `'xtext-resources/{xtextLang}-syntax'` (Orion) or `'xtext-resources/mode-{xtextLang}'` (Ace). For CodeMirror syntax highlighting is configured by registering a _mode_ and setting the `mode` option accordingly (default mode name: `'xtext/{xtextLang}'`)."
msgstr "ハイライト仕様へのパスはXtextエディターの設定中に`syntaxDefinition`オプションで設定されます。もし、オプションに値を設定しなかった場合、 `'xtext-resources/{xtextLang}-syntax'` (Orion) もしくは `'xtext-resources/mode-{xtextLang}'` (Ace) 形式で`xtextLang`から構築されます。CodeMirrorシンタックスハイライトは_mode_の登録と`mode`オプションの設定により構成されます。(デフォルト名: `'xtext/{xtextLang}'`)"

#: ../../../documentation/330_web_support.md:227
msgid "### Invoking Services"
msgstr "### サービスの実行"

#: ../../../documentation/330_web_support.md:229
msgid "The `createEditor` and `createServices` functions set up listeners for editor events such that most services are invoked automatically while using the editor. However, all services can also be invoked programmatically using the `xtextServices` object that is attached to each editor instance. For example, the following code saves the resource associated with the editor when the button with the id `save-button` is clicked:"
msgstr "`createEditor` と `createServices`関数は、エディターを使用している間ほとんどのサービスを自動的に実行するためのエディターイベントに対するリスナーを設定します。また、全てのサービスは各エディターインスタンスに割り当てている`xtextServices`オブジェクトを使用することでプログラムで実行することも可能です。以下のコードはid `save-button`のボタンがクリックされたときにエディターに関連付けられているリソースを保存する例です:"

#: ../../../documentation/330_web_support.md:231
msgid ""
"```javascript\n"
"var editor = xtext.createEditor();\n"
"$(\"#save-button\").click(function() {\n"
"    editor.xtextServices.saveResource();\n"
"});\n"
"```"
msgstr ""
"```javascript\n"
"var editor = xtext.createEditor();\n"
"$(\"#save-button\").click(function() {\n"
"    editor.xtextServices.saveResource();\n"
"});\n"
"```"

#: ../../../documentation/330_web_support.md:238
msgid "The following functions are available, provided that the respective services are enabled and supported by the employed editor library. All functions return a _promise_ that is eventually resolved to the requested data. Furthermore, all these functions can be supplied with an `options` parameter to override some of the options declared when the editor was built."
msgstr "採用したエディターライブラリーによって有効化そしてサポートされる各サービスは以下の関数によって提供されます。全ての関数は要求データを最終的に解決する_promise_を返します。さらに、全ての関数に`options`パラメータを与えることで、エディタービルド時に宣言したオプションの一部を上書きすることができます。"

#: ../../../documentation/330_web_support.md:240
msgid ""
" * `getContentAssist()`\n"
"   Returns the content assist proposals in the format explained in the [Content Assist](#content-assist) section.\n"
" * `validate()`\n"
"   Returns the validation result. The returned object has a property `issues`, which is an array of objects with the following properties:\n"
"    * `description`: A description to be displayed to the user.\n"
"    * `severity`: one of `'error'`, `'warning'`, or `'info'`\n"
"    * `line`: the line where the issue occurs (one-based)\n"
"    * `column`: the column where the issue occurs (one-based)\n"
"    * `offset`: the character offset in the document (zero-based)\n"
"    * `length`: the length of the affected text region\n"
" * `computeHighlighting()`\n"
"   Returns the text styling data for semantic highlighting (see the [Semantic Highlighting](#semantic-highlighting) section).\n"
" * `getOccurrences()`\n"
"   Returns the occurrences of the element at the current cursor position (see the [Mark Occurrences](#mark-occurrences) section).\n"
" * `getHoverInfo()`\n"
"   Returns the hover information at the current cursor position (see the [Hover Information](#hover-info) section).\n"
" * `format()`\n"
"   Formats the current selection (or the whole document if the selection has zero length) and returns the formatted text.\n"
" * `generate()`\n"
"   Returns the document generated from the associated resource. If more than one document has been generated, an object with a property `documents` is returned, which is an array of objects with the properties `name`, `contentType`, and `content`.\n"
" * `loadResource()`\n"
"   Loads the associated resource and returns an object with properties `fullText` and `dirty`. If the resource has been modified during the current session, the modified version is returned even if the page is reloaded.\n"
" * `saveResource()`\n"
"   Saves the current state of the resource.\n"
" * `revertResource()`\n"
"   Reverts the resource to the last saved state and returns an object with properties `fullText` and `dirty`.\n"
" * `update()`\n"
"   Computes the difference between the current editor content and the last version that has been committed to the server. If there is a difference, an update request is sent to refresh the server state. The return value has a single property `stateId`, which is an identifier for the new server state. All requests have to include the last obtained state identifier in order to succeed."
msgstr ""
" * `getContentAssist()`\n"
"   [コンテンツアシスト](#content-assist)節で説明した形式でコンテンツアシスト案を返します。\n"
" * `validate()`\n"
"   検証結果を返します。戻り値のオブジェクトは`issues`プロパティを持っており、これは以下のプロパティのオブジェクト配列です:\n"
"    * `description`: ユーザに表示する説明。\n"
"    * `severity`: `'error'`、 `'warning'`、 or `'info'`のいずれか\n"
"    * `line`: 問題が発生した行 (1から開始)\n"
"    * `column`: 問題が発生した列 (1から開始)\n"
"    * `offset`: ドキュメント内の文字オフセット (0から開始)\n"
"    * `length`: 影響を受けるテキスト領域の長さ\n"
" * `computeHighlighting()`\n"
"   セマンティックハイライト用のテキストスタイリングデータを返します。 ([セマンティックハイライト](#semantic-highlighting)節を参照)。\n"
" * `getOccurrences()`\n"
"   現在のカーソル位置にあるエレメントを返します。 ([強調表示](#mark-occurrences)節を参照)。\n"
" * `getHoverInfo()`\n"
"   現在のカーソル位置にあるホバーを返します。 ([ホバー](#hover-info)節を参照)。\n"
" * `format()`\n"
"   Formats the current selection (or the whole document if the selection has zero length) and returns the formatted text.\n"
"   現在の選択範囲をフォーマットし、フォーマット後のテキストを返します。 (選択範囲の長さが0の場合、全てのドキュメントをフォーマット対象とする)\n"
" * `generate()`\n"
"   関連付けられたリソースから生成されたドキュメントを返します。 1つ以上のドキュメントが生成された場合、 `documents`プロパティを持つオブジェクトが返されます。`documents`プロパティは`name`、`contentType`と`content`プロパティを持つオブジェクトの配列です。\n"
" * `loadResource()`\n"
"   関連付けられたリソースをロードし、`fullText`と`dirty`プロパティを持つオブジェクトを返します。現在のセッション中にリソースが変更された場合、ページがリロードされても変更後のバージョンが返されます。\n"
" * `saveResource()`\n"
"   現在のリソースが保存されます。\n"
" * `revertResource()`\n"
"   Reverts the resource to the last saved state and returns an object with properties `fullText` and `dirty`.\n"
"   リソースを最終保存時のものに戻し、`fullText`と`dirty`プロパティを持つオブジェクトを返します。\n"
" * `update()`\n"
"   最後にサーバーにコミットしたバージョンのコンテンツと現在のエディター上のコンテンツとの差分を計算します。差分があった場合、サーバーの状態をリフレッシュするために更新要求を送信します。戻り値は更新されたサーバー状態の識別子である`stateId`のみを持つオブジェクトを返します。全ての要求は最後に取得したサーバー状態の識別子を含む必要があります。"

#: ../../../documentation/330_web_support.md:269
msgid "### Full List of Options {#options-reference}"
msgstr "### 全てのオプション {#options-reference}"

#: ../../../documentation/330_web_support.md:271
msgid ""
" * `baseUrl`\n"
"   The path segment where the Xtext service is found (default: `'/'`). See the `serviceUrl` option.\n"
" * `contentAssistCharTriggers`\n"
"   Characters that invoke the content assist service when typed (Orion only).\n"
" * `contentAssistExcludedStyles`\n"
"   Excluded styles for character triggers (Orion only).\n"
" * `contentType`\n"
"   The content type included in requests to the Xtext server. If no content type is given, the file extension in the `resourceId` option is used to determine the language.\n"
" * `dirtyElement`\n"
"   An element into which the dirty status class is written when the editor is marked dirty; it can be either a DOM element or an id for a DOM element.\n"
" * `dirtyStatusClass`\n"
"   A CSS class name written into the dirtyElement when the editor is marked dirty (default: `'dirty'`).\n"
" * `document`\n"
"   The document; if not specified, the global document is used.\n"
" * `enableContentAssistService`\n"
"   Whether content assist should be enabled (default: `true`).\n"
" * `enableCors`\n"
"   Whether CORS should be enabled for service request (default: `false`).\n"
" * `enableFormattingAction`\n"
"   Whether the formatting action should be bound to the standard keystroke <kbd>Ctrl</kbd>+<kbd>⇧</kbd>+<kbd>F</kbd> (<kbd>Ctrl</kbd>+<kbd>⇧</kbd>+<kbd>S</kbd> on CodeMirror) / <kbd>⌘</kbd>+<kbd>⇧</kbd>+<kbd>F</kbd> (default: `false`).\n"
" * `enableFormattingService`\n"
"   Whether text formatting should be enabled (default: `true`).\n"
" * `enableGeneratorService`\n"
"   Whether code generation should be enabled (default: `true`). No default keystroke is bound for the generator, so it must be triggered through JavaScript code.\n"
" * `enableHoverService`\n"
"   Whether mouse hover information should be enabled (default: `true`).\n"
" * `enableHighlightingService`\n"
"   Whether semantic highlighting should be enabled (default: `true`). In contrast to [syntax highlighting](#syntax-highlighting), semantic highlighting is computed on the server.\n"
" * `enableOccurrencesService`\n"
"   Whether marking occurrences should be enabled (default: `true`).\n"
" * `enableSaveAction`\n"
"   Whether the save action should be bound to the standard keystroke <kbd>Ctrl</kbd>+<kbd>S</kbd> / <kbd>⌘</kbd>+<kbd>S</kbd> (default: `false`).\n"
" * `enableValidationService`\n"
"   Whether validation should be enabled (default: `true`).\n"
" * `loadFromServer`\n"
"   Whether to load the editor content from the server. The default value is `true` if the `resourceId` option is set and `false` otherwise.\n"
" * `mouseHoverDelay`\n"
"   The number of milliseconds to wait after a mouse hover before the information tooltip is displayed (default: 500).\n"
" * `parent`\n"
"   The parent element into which the editor should be created. It can be either a DOM element or an id for a DOM element (default: `'xtext-editor'`).\n"
" * `parentClass`\n"
"   If the `parent` option is not given, this option is used to find elements that match the given class name (default: `'xtext-editor'`).\n"
" * `resourceId`\n"
"   The identifier of the resource displayed in the text editor. This option is sent to the server to communicate required information on the respective resource.\n"
" * `selectionUpdateDelay`\n"
"   The number of milliseconds to wait after a selection change before Xtext services are invoked (default: 550).\n"
" * `sendFullText`\n"
"   Whether the full text shall be sent to the server with each request (default: `false`). Use this if you want the server to run in stateless mode. If the option is inactive, the server state is updated regularly.\n"
" * `serviceUrl`\n"
"   The URL of the Xtext servlet. If no value is given, it is constructed using the `baseUrl` option in the form `{location.protocol}//{location.host}{baseUrl}xtext-service`.\n"
" * `showErrorDialogs`\n"
"   Whether errors should be displayed in popup dialogs (default: `false`).\n"
" * `syntaxDefinition`\n"
"   A path to a JS file containing a syntax definition. Set this option to `'none'` to disable syntax highlighting. See the [Syntax Highlighting](#syntax-highlighting) section for more details.\n"
" * `textUpdateDelay`\n"
"   The number of milliseconds to wait after a text change before Xtext services are invoked (default: 500).\n"
" * `xtextLang`\n"
"   The language name (usually the file extension configured for the language). This is used to set the `resourceId` and `syntaxDefinition` options if they have not been specified."
msgstr ""
" * `baseUrl`\n"
"   Xtextサービスがどこにあるかを表すパスセグメント。(デフォルト:`'/'`)`serverUrl`オプションを参照。\n"
" * `contentAssistCharTriggers`\n"
"   コンテンツアシストサービスを呼び出すためのキー。(Orionのみ)\n"
" * `contentAssistExcludedStyles`\n"
"   コンテンツアシストの呼び出しを除外するキー。 (Orionのみ)。\n"
" * `contentType`\n"
"   Xtextサーバーへの要求に含むコンテンツタイプ。もしコンテンツタイプが設定されていない場合、`resourceId`オプション内のファイル拡張子が言語を判断するために使用されます。\n"
" * `dirtyElement`\n"
"   エディターがダーティーとマーキングされたとき、ダーティー状態クラスが記載される要素。DOM要素もしくはDOM要素のidのどちらかを指定します。\n"
" * `dirtyStatusClass`\n"
"   エディターがダーティーとマーキングされたとき、ダーティー要素の中に記載されるCSSクラス名です。(デフォルト: `'dirty'`)\n"
" * `document`\n"
"   ドキュメント。もし指定されていない場合は、ドキュメント全体が使用されます。\n"
" * `enableContentAssistService`\n"
"   コンテンツアシストを有効にするかどうか。 (デフォルト: `true`).\n"
" * `enableCors`\n"
"   サービス要求にCORSを有効にするかどうか。 (default: `false`).\n"
" * `enableFormattingAction`\n"
"   標準のキーストロークにフォーマットアクションをバインドするかどうか。<kbd>Ctrl</kbd>+<kbd>⇧</kbd>+<kbd>F</kbd> (<kbd>Ctrl</kbd>+<kbd>⇧</kbd>+<kbd>S</kbd> CodeMirror上の場合) / <kbd>⌘</kbd>+<kbd>⇧</kbd>+<kbd>F</kbd> (デフォルト: `false`)\n"
" * `enableFormattingService`\n"
"   テキストフォーマットを有効にするかどうか。 (デフォルト: `true`).\n"
" * `enableGeneratorService`\n"
"   コード生成を有効にするかどうか。(デフォルト: `true`)ジェネレーターにデフォルトのキーストロークがバインドされていない場合、JavaScriptコードから実行する必要があります。\n"
" * `enableHoverService`\n"
"   マウスホバーを有効にするかどうか。(デフォルト: `true`)\n"
" * `enableHighlightingService`\n"
"   セマンティックハイライトを有効にするかどうか。 (デフォルト: `true`). [シンタックスハイライト](#syntax-highlighting)と対照的に、 セマンティックハイライトはサーバー上で計算されます。\n"
" * `enableOccurrencesService`\n"
"   強調表示を有効にするかどうか。(デフォルト: `true`)\n"
" * `enableSaveAction`\n"
"   保存を標準キーストロークにバインドするかどうか。 <kbd>Ctrl</kbd>+<kbd>S</kbd> / <kbd>⌘</kbd>+<kbd>S</kbd> (デフォルト: `false`)\n"
" * `enableValidationService`\n"
"   検証を有効にするかどうか。 (デフォルト: `true`)\n"
" * `loadFromServer`\n"
"   サーバーからエディターコンテンツをロードするかどうか。 デフォルトは `resourceId`が設定されている場合は`true`、それ以外は`false`です。\n"
" * `mouseHoverDelay`\n"
"   マウスオーバー後、ツールチップが表示されるまでの待ち時間(ミリ秒)(デフォルト: 500).\n"
" * `parent`\n"
"   親要素の中にエディタを生成するかどうか。DOM要素もしくはDOM要素のidのどちらかを指定することができます。(デフォルト: `'xtext-editor'`)\n"
" * `parentClass`\n"
"   `parent`オプションが設定されていない場合、このオプションは与えられたクラス名で要素を検索するために使用されます。 (デフォルト: `'xtext-editor'`)\n"
" * `resourceId`\n"
"   テキストエディタ内に表示されているリソースの識別子です。このオプションは、各リソースに関して必要な情報をサーバーとやり取りするために送信されます。\n"
" * `selectionUpdateDelay`\n"
"   選択が変更されてからXtextサービスが実行されるまでの待ち時間(ミリ秒)(デフォルト: 550)\n"
" * `sendFullText`\n"
"   リクエスト毎に全テキストを送信するかどうか。(デフォルト: `false`)これはサーバーをステートレスモードで動作させるときに使用してください。このオプションが無効の場合、サーバー状態は定期的に更新されます。\n"
" * `serviceUrl`\n"
"   XtextサーブレットのURL。オプションに値が設定されていない場合、`{location.protocol}//{location.host}{baseUrl}xtext-service`形式の`baseUrl`オプションを使用して構成されます。\n"
" * `showErrorDialogs`\n"
"   ポップアップダイアログでエラーを表示するかどうか。(デフォルト: `false`)\n"
" * `syntaxDefinition`\n"
"   構文定義を含むJSファイルのパス。このオプションを`'none'`に設定するとシンタックスハイライトを無効にできます。詳細は[シンタックスハイライト](#syntax-highlighting)節を参照。\n"
" * `textUpdateDelay`\n"
"   テキストが変更されXtextサービスが実行されるまでの待ち時間(ミリ秒)(デフォルト: 500)\n"
" * `xtextLang`\n"
"   言語名。(通常は言語用に構成されたファイル拡張子)このオプションが設定されていない場合、`resourceId`と`syntaxDefinition`オプションが設定されていない場合、それらを指定するために使用されます。"

#: ../../../documentation/330_web_support.md:330
msgid "## The Server {#server}"
msgstr "## サーバー {#server}"

#: ../../../documentation/330_web_support.md:332
msgid "The language-specific resources are provided through HTTP requests which are processed by the [XtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.servlet/src/main/java/org/eclipse/xtext/web/servlet/XtextServlet.java). This class is also responsible for managing the lifecycle of the language [Injector]({{site.javadoc.guice}}/com/google/inject/Injector.html) (see [Dependency Injection](302_configuration.html#dependency-injection)). The default approach is to create an injector when the servlet is started and to register it in the [IResourceServiceProvider.Registry]({{site.src.xtext_core}}/org.eclipse.xtext/src/org/eclipse/xtext/resource/IResourceServiceProvider.java). In order to override the default behavior, you can change or add bindings in the `<LanguageName>WebModule` or `<LanguageName>IdeModule` of your language."
msgstr "言語固有のリソースは[XtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.servlet/src/main/java/org/eclipse/xtext/web/servlet/XtextServlet.java)にて処理されるHTTPリクエストを通じて提供されます。このクラスは言語[インジェクター]({{site.javadoc.guice}}/com/google/inject/Injector.html) のライフサイクルの管理も担当しています。([依存性の注入](302_configuration.html#dependency-injection)参照)標準的なアプローチはサーブレットを起動したとき、インジェクターを生成し、[IResourceServiceProvider.Registry]({{site.src.xtext_core}}/org.eclipse.xtext/src/org/eclipse/xtext/resource/IResourceServiceProvider.java)に登録する方法です。デフォルトのふるまいをオーバーライドするため、あなたの言語の`<LanguageName>WebModule`もしくは`<LanguageName>IdeModule`内のバインドを変更もしくは追加することができます。"

#: ../../../documentation/330_web_support.md:334
msgid "The usual way to include the Xtext servlet in a server application is to create a subclass of [XtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.servlet/src/main/java/org/eclipse/xtext/web/servlet/XtextServlet.java), override `init()` and `destroy()` to manage the runtime resources, and add a [WebServlet]({{site.javadoc.javaee}}/javax/servlet/annotation/WebServlet.html) annotation with `urlPatterns = \"/xtext-service/*\"` as parameter. See [MyXtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.example.jetty/src/main/java/org/eclipse/xtext/web/example/jetty/MyXtextServlet.java) for an example."
msgstr "サーバーアプリケーション内にXtextサーブレットを含めるための標準的な方法は、[XtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.servlet/src/main/java/org/eclipse/xtext/web/servlet/XtextServlet.java)サブクラスを生成し、`init()`と`destroy()`を実行環境を管理するためオーバーライドし、そして `urlPatterns = \"/xtext-service/*\"`パラメータをつけた[WebServlet]({{site.javadoc.javaee}}/javax/servlet/annotation/WebServlet.html)アノテーションを追加します。[MyXtextServlet]({{site.src.xtext_web}}/org.eclipse.xtext.web.example.jetty/src/main/java/org/eclipse/xtext/web/example/jetty/MyXtextServlet.java)の例を参照してください。"

#: ../../../documentation/330_web_support.md:336
msgid "If you want to implement your own communication channel to provide the language-specific services without using XtextServlet, you can do so by injecting an instance of [XtextServiceDispatcher]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/XtextServiceDispatcher.java) and calling `getService(IServiceContext)`. The input to this method is an [IServiceContext]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/IServiceContext.java), which must be implemented to provide the request parameters and the client session. The return value is a descriptor that can be used to invoke the actual service. Furthermore, [XtextServiceDispatcher]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/XtextServiceDispatcher.java) can be subclassed in order to add custom services with access to the document AST and all related Xtext APIs."
msgstr "Xtextサーブレットを用いずに言語固有サービスを提供するための独自の通信チャンネルを実装する場合、[XtextServiceDispatcher]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/XtextServiceDispatcher.java)インターフェースをインジェクトし、`getService(IServiceContext)`を呼び出すことで実現できます。引数である[IServiceContext]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/IServiceContext.java)は要求パラメータとクライアントセッションを提供するために実装しなければなりません。さらに、[XtextServiceDispatcher]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/XtextServiceDispatcher.java)をサブクラス化して、ドキュメントASTと関連する全てのXtext APIにアクセスするためのカスタムサービスを追加することもできます。"

#: ../../../documentation/330_web_support.md:338
msgid "The following sections describe how to customize the standard services for web editors."
msgstr "以降にWebエディタの標準サービスのカスタマイズ方法を示します。"

#: ../../../documentation/330_web_support.md:340
msgid "### Content Assist {#content-assist}"
msgstr "### コンテンツアシスト {#content-assist}"

#: ../../../documentation/330_web_support.md:342
msgid "Content assist proposals for cross-references are created by [IdeCrossrefProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeCrossrefProposalProvider.java), while for other grammar elements [IdeContentProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeContentProposalProvider.java) is used. In order to customize the proposals, create subclasses of these providers and register them in your IDE Guice module."
msgstr "クロスリファレンスのコンテンツアシスト提案は[IdeCrossrefProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeCrossrefProposalProvider.java)によって生成され、その他の文法要素は[IdeContentProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeContentProposalProvider.java) が使用されます。提案のカスタマイズのためには、これらのプロバイダーのサブクラスを作成し、IDEガイドモジュールにそれらを登録します。"

#: ../../../documentation/330_web_support.md:344
msgid "[IdeContentProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeContentProposalProvider.java) has one `_createProposals(...)` dispatch method for each type of grammar element. In most cases the best choice is to override the method for [Assignments]({{site.src.xtext_core}}/org.eclipse.xtext/emf-gen/org/eclipse/xtext/Assignment.java) and to filter the correct assignments by comparing them with the instances in the generated GrammarAccess of your language. A proposal is submitted by creating and configuring an instance of [ContentAssistEntry]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/ContentAssistEntry.java) and passing it to the given acceptor. This entry class contains all information required to display the proposal in the web browser and to apply it to the document. Usually it is sent to the client in JSON format."
msgstr "[IdeContentProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeContentProposalProvider.java)は文法要素の各型に対するディスパッチメソッド`_createProposals(...)`を1つもっています。多くの場合、最良の選択は[Assignments]({{site.src.xtext_core}}/org.eclipse.xtext/emf-gen/org/eclipse/xtext/Assignment.java)のメソッドをオーバーライドし、生成された言語のGrammarAccessインスタンスと比較し、正しい割り当てをフィルターすることです。[ContentAssistEntry]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/ContentAssistEntry.java)のインスタンスを作成・構成し、与えられたアクセプターに引き渡すことで提案が提示されます。ContentAssistEntryクラスはWebブラウザーに提案を表示し、ドキュメントに反映するために必要な全ての情報を格納しています。通常クライアントへはJSONフォーマットで送信されます。"

#: ../../../documentation/330_web_support.md:346
msgid "The typical customization point for [IdeCrossrefProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeCrossrefProposalProvider.java) is the method `createProposal(...)`, which is called for each element found by the scope provider. Here you can fine-tune the information to put into the [ContentAssistEntry]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/ContentAssistEntry.java)."
msgstr "[IdeCrossrefProposalProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/IdeCrossrefProposalProvider.java)の典型的なカスタマイズポイントは、スコーププロバイダーによって検索された各エレメントに呼び出される`createProposal(...)`メソッドです。ここで[ContentAssistEntry]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/contentassist/ContentAssistEntry.java)に入力する情報を調整することができます。"

#: ../../../documentation/330_web_support.md:348
msgid "### Semantic Highlighting {#semantic-highlighting}"
msgstr "### セマンティックハイライト {#semantic-highlighting}"

#: ../../../documentation/330_web_support.md:350
msgid "The default behavior of Xtext editors is to have no semantic highlighting (syntactic highlighting, e.g. for keywords and strings, is done on the client side as described in [Syntax Highlighting](#syntax-highlighting)). In order to add styling to your text, create a subclass of [DefaultSemanticHighlightingCalculator]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/syntaxcoloring/DefaultSemanticHighlightingCalculator.java) and override `highlightElement(...)`. Here you can mark text regions with CSS classes by submitting a text offset, a length, and the CSS class name to the given acceptor. You can specify the actual text style in a CSS file that is included by the web page containing the Xtext editor."
msgstr "デフォルトのXtextエディタには、セマンティックハイライトはありません。(シンタックスハイライト、例えばキーワードと文字列は[シンタックスハイライト](#syntax-highlighting)で示したようにクライアントサイドで処理される。)スタイルをテキストに追加する場合、[DefaultSemanticHighlightingCalculator]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/syntaxcoloring/DefaultSemanticHighlightingCalculator.java)のサブクラスを作成し、 `highlightElement(...)`をオーバーライドします。ここで、アクセプターにテキストオフセット、長さそしてCSSクラス名を与えることで提示されるCSSを用いてテキスト範囲をマークすることができます。Xtextエディターを含むWebページに含まれるCSSファイルにより実際のテキストスタイルを設定することができます。"

#: ../../../documentation/330_web_support.md:352
msgid "### Mark Occurrences {#mark-occurrences}"
msgstr "### 強調表示 {#mark-occurrences}"

#: ../../../documentation/330_web_support.md:354
msgid "The service for marking occurrences of a selected element is handled by [OccurrencesService]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/occurrences/OccurrencesService.java). Here you can override `filter(EObject)` to exclude some elements from this service. The actual text regions to be marked are computed automatically from the cross-references present in the model."
msgstr "選択された要素の強調表示サービスは[OccurrencesService]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/occurrences/OccurrencesService.java)によって処理されます。`filter(EObject)`をオーバーライドすることでこのサービスから一部の要素を除外することができます。実際にマークされるテキスト両機はモデル内のクロスリファレンスから自動的に計算されます。"

#: ../../../documentation/330_web_support.md:356
msgid "### Hover Information {#hover-info}"
msgstr "### ホバー {#hover-info}"

#: ../../../documentation/330_web_support.md:358
msgid "The information displayed for mouse hover popups is created in HTML format and consists of two parts: a title and a description."
msgstr "マウスホバーポップアップはHTMLフォーマットで生成され、2つのパーツから構成されます: タイトルと説明。"

#: ../../../documentation/330_web_support.md:360
msgid "The title is composed of a text label and an image. The label is computed by the [INameLabelProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/labels/INameLabelProvider.java), and the default is the value of the `name` property of an element, if it exists. The image is determined by an implementation of [IImageDescriptionProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/labels/IImageDescriptionProvider.java). The default behavior is to generate a `<div>` and annotate it with a CSS class of the form `<class>-icon`, where `<class>` is the name of the EClass of the corresponding element. The actual images can be assigned to these classes in a CSS file using the `background-image` CSS property."
msgstr "タイトルはテキストラベルと画像から構成されます。ラベルは[INameLabelProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/labels/INameLabelProvider.java)によって計算され、要素の`name`プロパティが存在する場合はデフォルト値として使われます。画像は[IImageDescriptionProvider]({{site.src.xtext_core}}/org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/labels/IImageDescriptionProvider.java)の実装によって決定されます。デフォルトのふるまいは、`<class>-icon`形式のCSSクラスをつけた`<div>`を生成します。このとき`<class>`は対応する要素のEClassの名前です。実際の画像はCSSファイル内のクラスにCSSプロパティの`background-image`を使用して割り当てられます。"

#: ../../../documentation/330_web_support.md:362
msgid "The description part of the hover popup is determined by the [IEObjectDocumentationProvider]({{site.src.xtext_core}}/org.eclipse.xtext/src/org/eclipse/xtext/documentation/IEObjectDocumentationProvider.java). For this part the default content is fetched from the comments in the document: if the definition of the element is preceded by a multi-line comment (e.g. `/* ... */`), the content of that comment is used as description."
msgstr "ホバーポップアップの説明部は[IEObjectDocumentationProvider]({{site.src.xtext_core}}/org.eclipse.xtext/src/org/eclipse/xtext/documentation/IEObjectDocumentationProvider.java)にて決定されます。この部分のデフォルトコンテントはドキュメントのコメントから取得されます: もし、要素の定義の前に複数行のコメント(例 `/* ... */`)がある場合、コメントのコンテンツが説明部として使用されます。"

#: ../../../documentation/330_web_support.md:364
msgid "### Persistence {#persistence}"
msgstr "### 永続化 {#persistence}"

#: ../../../documentation/330_web_support.md:366
msgid "Without further adaptation the Xtext server does not provide any persistence functionality. As described in the [Getting the Text Content](#getting-text-content) section, there are multiple ways to fill the web editor with text. If you would like to use the persistence service included in the Xtext server, you need to implement [IServerResourceHandler]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/persistence/IServerResourceHandler.java). The `get` and `put` operations declared in that interface should delegate to the persistence layer you would like to connect. For a simple example see [FileResourceHandler]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/persistence/FileResourceHandler.java)."
msgstr "対応しない限り、Xtextサーバは永続化機能を提供しません。[テキストコンテントの取得](#getting-text-content)節で述べたように、Webエディタにテキストを入力する方法は複数あります。Xtextサーバーに永続化サービスを含めたい場合、[IServerResourceHandler]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/persistence/IServerResourceHandler.java)を実装する必要があります。インターフェースで宣言されている`get`と`put`命令は、接続したい永続化層に委任する必要があります。[FileResourceHandler]({{site.src.xtext_web}}/org.eclipse.xtext.web/src/main/java/org/eclipse/xtext/web/server/persistence/FileResourceHandler.java)に簡単な例を示しています。"

#: ../../../documentation/330_web_support.md:368
msgid "---"
msgstr "---"

#: ../../../documentation/330_web_support.md:370
msgid "**[Next Chapter: LSP Support](340_lsp_support.html)**"
msgstr "**[次章: LSPサポート](340_lsp_support.html)**"
